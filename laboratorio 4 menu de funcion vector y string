#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include <string>
#include "math.h"
#include "stdlib.h"

#define ENTER '\n'

float area(float a, float b, float c);
void leerVector(int B[],int N);
void Generar(int V[],int Vex[],int N,int M);

using namespace std;
//prototipo de funciones
void main()
{ 
    int opcion;
    float r,a,b,c;
    int tamaño;
    string palabra;
    string alreves;
// inicio del menu
  do
  {cout<<"             Menu \n";
   cout<<"     1.    FUNCION  \n";
   cout<<"     2.    VECTOR\n";
   cout<<"     3.    PALINDROMO \n";
   cout<<"     0.    SALIR\n";
   cout<<"Opcion: ";
   cin>>opcion;
    switch(opcion)
    {
     case 1:
          cout<<"introduzca los lados del triangulo: ";
          cin>>a;
          cin>>b;
          cin>>c;
          r=area(a, b, c);
          cout<<"el area del triangulo es : ";
          cout<<r;

     break;
     case 2:
        cout<<"\n Ingrese el tamaño del 1er vector: ";
        cin>>N;
      cout<<"\n Ingrese el tamaño del 2do vector: ";
      cin>>M;
      cout<<"\n Ingrese Los Valores del 1er vector: \n\n";
      leerVector(V,N);
     cout<<"\n";
     cout<<"\n Ingrese Los Valores del 2do vector: \n\n";
     leerVector(Vex,M);
     cout<<"\n";

     Generar(V,Vex,N,M);
          
     break;
     case 3:
         
          cout<<"introduzca una palabra: ";
          getline(cin, palabra, ENTER);
          cin>>palabra;
          tamaño= palabra.length();
          for (int i= tamaño-1; i>=0;i--)
          {
            alreves = alreves + palabra[i];
          }
          cout<<alreves<<endl;
          if(palabra == alreves)
             cout<<"es palindromo"<<endl;
          else
           cout<<"no es palindromo"<<endl;
          
     break;
     case 0:
          cout<<"salir\n";
     break;
     default: 
     cout<<"Opcion invalida";
    }
getch();
system("cls");
  }while(opcion!=0);

   getch();
}
void leerVector(int B[],int N)
{
  for(int i=0;i<N;i++)
   {
    cout<<"V["<<i<<"]=";
    cin>>B[i];
   }
}

void Generar(int V[],int Vex[],int N,int M)
{
 int i,j=0,Vector[MAX]={'0'};
 int aux=0;
 for(i=0;i<N;i++)
  { 
  Vector[i] = V[i];
  j++;
}
for(i=0;i<M;i++)
{ 
 Vector[j] = Vex[i];
 j++;
}
cout<<"\n Mostrando nuevo vector \n";
for(int i=0;i<(N+M);i++)
{ 
 cout<<"\n"<<"Vector["<<i<<"]="<<Vector[i];
}
cout<<"\n";
for(i=0;i<(N+M)-1;i++)
{
 for(j=i+1;j<(N+M);j++)
  {
   if(Vector[i]<Vector[j])
    {
     aux = Vector[i];
     Vector[i] = Vector[j];
     Vector[j] = aux;
    }
  }
}
cout<<"\n Datos Clasificados al nuevo vector: \n";
for(int i=0;i<(N+M);i++)
 {
 cout<<"\n Vector["<<i<<"] = "<<Vector[i];
 }
}
